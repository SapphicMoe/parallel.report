---
import Layout from '@layouts/Page.astro';

import { Image } from 'astro:assets';
import type { ResourceModule, Resource } from '@utils/index';

import Footer from '@components/base/Footer.astro';
import Header from '@components/home/Header.md';
import Line from '@components/base/Underline.astro';
import Link from '@components/home/Link.astro';
import Notice from '@components/home/Notice.md';

const resources = (await Astro.glob<ResourceModule>('../utils/resources/*.ts')).map((entry) => entry.default);
const otherResources = (await import('@utils/other')).default;
---

<Layout
  description="This site covers Guardians who contributed to Destiny 2 and its API in a meaningful way, and have received the Parallel Program emblem."
  pageTitle="Parallel Program Report"
  title="Home | Parallel Program Report"
>
  <span class="flex flex-wrap justify-center pb-5">
    <Image
      class="w-24"
      src="/favicon.png"
      title="The Parallel Program emblem."
      alt="The Parallel Program emblem."
      width={96}
      height={96}
    />
  </span>

  <Header />

  {
    resources.map((resource: Resource) => {
      return (
        <span class={`flex flex-col gap-1 rounded-2xl border-[2px] ${resource.color.border} p-6`}>
          <Image
            src={`/images/parallel/${resource.image.file}`}
            height={resource.image.height}
            width={resource.image.width}
            alt={`Logo of ${resource.title}`}
            title={`Logo of ${resource.title}`}
          />

          <span class="font-display text-3xl font-bold md:text-4xl">
            <a
              class={`pt-2 text-3xl font-semibold ${resource.color.text}`}
              href={resource.site}
              title={`${resource.title}'s website`}
              target="_blank"
            >
              {resource.title}
            </a>
          </span>

          {resource.description}

          <span class="flex flex-wrap gap-2 pb-2 pt-1">
            {resource.category.map((category) => {
              return (
                <span
                  class={`rounded-xl border-2 px-2 font-medium text-ctp-base ${resource.color.background} ${resource.color.border}`}
                >
                  {category}
                </span>
              );
            })}
          </span>

          <hr class={resource.color.border} />

          <ul class="flex list-disc flex-col gap-1 pb-2 pl-6 pt-2 font-display">
            {resource.contributors.map((contributor): Resource['contributors'] => {
              return (
                <li class:list={{ 'font-bold': contributor.bold }}>
                  <Link className={resource.color.text} link={contributor.link} name={contributor.name} /> —
                  {contributor.role}
                </li>
              );
            })}
          </ul>
        </span>
      );
    })
  }

  <span class="flex flex-col pt-2">
    <Line class="pt-6">Other resources</Line>
    <ul class="flex list-disc flex-col gap-2 pb-5 pl-6 pt-4 font-display">
      {
        otherResources.map((author) => {
          return (
            <li>
              <Link link={author.link} name={author.author} /> —
              <Link className="font-semibold" link={author.resources[0].link} name={author.resources[0].name} /> -
              {author.resources[0].description}
            </li>
          );
        })
      }
    </ul>
  </span>

  <Footer>
    <hr class="pt-5 text-ctp-red" />
    <Notice />
  </Footer>

  <style>
    img[alt*='Logo of DestinyTracker'] {
      @apply pb-3 pt-3;
    }

    img[alt*='Logo of Ishtar Commander'] {
      @apply grayscale;
    }

    img[alt*='Logo of Ghost Overlay'] {
      @apply invert dark:invert-0;
    }
  </style>
</Layout>
